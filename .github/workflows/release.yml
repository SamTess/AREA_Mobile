name: 🚀 Release APK

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: '🎯 Release Type'
        required: true
        type: choice
        options:
          - staging
          - production
        default: 'staging'
      version:
        description: '📦 Version Number (e.g., 1.0.0)'
        required: true
        type: string
      release_notes:
        description: '📝 Release Notes (optional)'
        required: false
        type: string
        default: ''

permissions:
  contents: write

env:
  NODE_VERSION: '20'

jobs:
  release:
    name: 🏗️ Build & Release APK
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🔨 Prebuild Expo app
        run: npx expo prebuild --platform android --clean

      - name: 🏗️ Build APK
        run: cd android && ./gradlew assembleRelease

      - name: 📝 Generate Release Description
        id: release-description
        run: |
          RELEASE_TYPE="${{ github.event.inputs.release_type }}"
          VERSION="${{ github.event.inputs.version }}"
          NOTES="${{ github.event.inputs.release_notes }}"
          COMMIT_SHA="${{ github.sha }}"
          COMMIT_SHORT="${COMMIT_SHA:0:7}"
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/$COMMIT_SHA"
          BRANCH="${{ github.ref_name }}"
          DATE=$(date '+%Y-%m-%d %H:%M:%S UTC')
          ACTOR="${{ github.actor }}"

          if [ "$RELEASE_TYPE" == "production" ]; then
            EMOJI="🎉"
            TYPE_LABEL="Production Release"
            PRERELEASE="false"
          else
            EMOJI="🧪"
            TYPE_LABEL="Staging Release"
            PRERELEASE="true"
          fi

          DESCRIPTION="## ${EMOJI} ${TYPE_LABEL}

          ### 📋 Release Information
          - **Version:** \`${VERSION}\`
          - **Environment:** \`${RELEASE_TYPE}\`
          - **Released by:** @${ACTOR}
          - **Release Date:** ${DATE}
          - **Branch:** \`${BRANCH}\`
          - **Commit:** [\`${COMMIT_SHORT}\`](${COMMIT_URL})

          ### 📱 Installation
          Download the APK file below and install it on your Android device.

          ### 📝 Release Notes
          ${NOTES:-No additional notes provided.}

          ### 🔧 Technical Details
          - **Build Tool:** Expo + Gradle
          - **Target SDK:** Android
          - **Build Type:** Release

          ---
          *This release was created automatically via GitHub Actions*"

          echo "description<<EOF" >> $GITHUB_OUTPUT
          echo "$DESCRIPTION" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT

      - name: 🎉 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}-${{ github.event.inputs.release_type }}
          name: 🚀 ${{ github.event.inputs.version }} (${{ github.event.inputs.release_type }})
          body: ${{ steps.release-description.outputs.description }}
          draft: false
          prerelease: ${{ steps.release-description.outputs.prerelease }}
          files: android/app/build/outputs/apk/release/app-release.apk

      - name: 🎊 Release Summary
        run: |
          echo "### 🎉 Release Created Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Type:** ${{ github.event.inputs.release_type }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** v${{ github.event.inputs.version }}-${{ github.event.inputs.release_type }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ APK has been uploaded to the release" >> $GITHUB_STEP_SUMMARY
